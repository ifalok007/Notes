---> Rule Techonology :
Drools, Rule Engine..


		
---> Spring AOP :
	Cross Curring Concerns 
		The majority of the aplications we design will contain common functionality that spans layers and tiers.This functionality typically supports operations such authentication, authorization, caching, communication, exception management, Logging, instrumentation and validation.Such functionlaity is generally described as cross-cutting concern because it affects the entire application and should be centralized in one location in the code where possible.For example, If code that generates log entries and writes to the application logs is scattered throughout your layers and tiers, and the requirement related to these concerns change (such as logging to different location), you may have to update the relevant code throughout the entire system.Instead, If you centralize the logging code, you can chnage the behaviour bychanging the code in the just one location.
		
		In Spring a pointcut expression is used to determine whether advice needs to be executed or not 
			for ex, 	
				@PointCut("within(com.journaldev.spring.service.*)")
			sp there  are chances that these advices may get applied to some beans where its not intended.
			Thats why we create a custome annotation and annotae the method where we want the advice to be applied.
				pulic @interface Loggable{
				
				}
				
				@Aspect 
				public class EmployeeAnnotationAspect{
					@Before("@annotation(com.journaldev.spring.aspect.Loggable)")
					public void myAdvice(){
						System.out.println("executing my advice");
					}
				}
	
---> Spring fundamentals :



---> SQL replace NULL with empty String
	There are two ways to replace NULL with blank values in SQL Server, function ISNULL() and COALESCE()

---> Unable to install a breakpoint in (Eclipse debug mode error):
	configure build path- java compiler- add line number attribute
	
--->Checklist:
	1. Angular clean code 
	2. An Angular JS playbook
	3. Mockups (Ln bulletin)
	4. Spring boot 
	5. Drools (low priority)
	6. uib-modal dissection
	7. font-awesome
	8. token based vs cookie based authentication ,JSON Web Tokens (JWT) https://auth0.com/blog/cookies-vs-tokens-definitive-guide/
	9. NgModel Controller
	10. Configurable directives using Providers, by supplying configuration options before directive is instantiated
	11. Decorators to decorate services before use
CK:
	1. Angular UI router States
	2. Directives 
	3.	

---> Organizing multi-module maven project in eclipse project explorer (show child modules as child nodes):
	windows->Preferences-> Maven->Hide foders of physically nested modules and then re-import
				or 
	configure working sets 
	
---> <pluginManagement> vs <plugin> maven :
	Plugin configuration can be configured to be inherited by child POMs( or child modules) by using <pluginManagement>.Plugin Configration added inside <pluginManagement> doesn't apply to the POM (or project) it is defined in rather its intended for child POMs or projects.
	from child POMs you need to reference this parent plugin configuration to inherit the configuration, moreover child plugins can override parent pluginManagement definintion.
		
---> Combining Configuration Styles in Using Spring 4 (xml+java)
		http://docs.spring.io/spring-javaconfig/docs/1.0.0.M4/reference/html/ch06.html
		
---> Advantage and disadvantages of using XML config vs annotation
	XML configuration can be shared amaong different programming environments but not annotations
	annotations are attached to artifact they describe, thats a 'pro' point of annaotation
	
---> Unit testing Private methods:
	1.#Using Bytecode manipulator framework like PowerMock with mockito#
	2.By refactoring by changing private access modifier to default 
		as test classes are placed in same package yet in different folder(src/main/test)
			src/main/java
				com.infosys.fingerprintscanner.scanner
			src/test/java
				com.infosys.fingerprintscanner.scanner
				
---> Differential backup fo database in SqlServer
	A differential backup is based on the most recent, previous full data backup. A differential backup captures only the data that has changed since that full backup.
	
---> Precision vs Scale
	Numeric precision refers to the maximum number of digits that are present in the number.

	ie 1234567.89 has a precision of 9

	Numeric scale refers to the maximum number of decimal places

	ie 123456.789 has a scale of 3

	Thus the maximum allowed value for decimal(5,2) is 999.99
	
---> Running tests for a particular class mvn command
	mvn -Dtest=TstClassName test

---> Spring Annotayions for configuration :
	@Configuration : 
	@EnableAutoConfiguration : 
		configures application based on the classes present on class path such as if Spring data JPA present of the class path the spring will register a entity manager factory bean if the user has not done so. As user's configurations override auto configurations. Any configuration added by this annotation which is not relevant can be exculeded using exclude property on the annotations	
			@EnableAutoConfiguration(exclude = { MetricFilterAutoConfiguration.class, MetricRepositoryAutoConfiguration.class })
					which excludes #actuator# configuration ;
					#Actuator# endpoints allow you to monitor and interact with your application. Spring Boot includes a number of built-in endpoints and you can also add your own. For example the health endpoint provides basic application health information.
	@SpringBootApplication :
		
